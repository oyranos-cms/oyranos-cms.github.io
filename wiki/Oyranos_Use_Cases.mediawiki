== Introduction ==
Oyranos provides many settings, which are not easily to understand without colour management background. The following Use Cases will describe practical questions and theyre academic answere by Oyranos.

== Home user browser/viewer/print application ==
The user needs some way to copy files from the camera. The application, lets call it SmartBrowse (SB), must check if a ICC profile is embedded or if the colorimetric parameters of the colour space are otherwise specified in the image. This is the image colour space. 

If SB cant find one it becomes a bit difficult.

If SB has no information about the camera from a exif tag, but exif is pretty standard, it should include such information into the loaded file. In TIFF the model, make and software tags are good candidates to store such information or add a exif tag, with at least what is available from loading the images.

Ok, we can not query for the profile elsewhere. SB will ask Oyranos what to do. To use Oyranos we have to prepare some bits.

=== Code Preparation ===
SB has to put a 
 #include <oyranos/oyranos.h>
in the code, in order to use Oyranos. oyranos-config --cflags delivers the compiler flags and oyranos-config --ldflags the linker flags.

You can then link Oyranos into your application with:
 cc `oyranos-config --cflags` `oyranos-config --ldflags` mycode.c -o SB

=== Behaviour Preferences ===
As most tasks on the computer make sense by automating many steps to easen life of the user, Oyranos provides some settings which will route SB to do its work automatical right. We may aks: What did the user decide to do in the case of getting untagged data? ... and write:

 int untagged_action = oyGetBehaviour (oyBEHAVIOUR_ACTION_UNTAGGED_ASSIGN );

[[Image:Oyranos-config-flu-0.1.5 behaviour-mismatching no-image-profile-opt.png]]

With a 0 in untagged_action nothing needs to be done. The image shall not be colour corrected further.

With a 1 in untagged_action the image shall obtain a standard colour space. We will continue with this case below.

The thierd possibility comes with a 2 in untagged_action. It means a dialog shall appear to let the user select a appropriate profile by himself.

=== Standard Profile Preferences ===
Then SB can ask Oyranos for its default Rgb profile setting. The call:

 char *profile_name = oyGetDefaultProfileName ( oyASSUMED_RGB , myAllocateFunc );

gives you a profile name.

As a fourth option SB should as well be able to look into a database for comparing the camera model and possibly serial number with available ICC profiles for the system, Ã¤hhmmm but it is not yet ready in Oyranos.

=== Obtaining a Profile ===
After obtaining the profile name it can be loaded by:

 size_t size;
 void *standard_rgb_profile = oyGetProfileBlock (profile_name, &size, myAllocateFunc);


The next step is to query Oyranos for the display profile as SB want to show immediately thumbnail images. Here SB source text has to include 
 #include <oyranos/oyranos_monitor.h>

 char *monitor_profile = oyGetMonitorProfile (display_name, &size, myAllocateFunc);

should deliver the needed bits.

Some important options to pass to your [[ColourMatchingModuls]] are queried now:<br>
Rendering Intent, Black Point Compensation, possibly a thierd profile - the proofing profile with its own rendering intent and the option for marking out of gamut colours.

Thats all information you need to correct the image for displaying on monitor.

=== Printing ===
For printing in a very simple Home user setup, we see just one printer and can use the proofing profile as the one default print device profile. Thats very simple. Ask for the proofing profile and convert the image from the image colour space to the proofing colour space with the default intent. Sent the data to the printer driver or create a print file.

== Image editor ==
In version 2.0 of SB the capability to edit and save images is introduced. The new application should behave on loading images the same as before regarding colour management. 

=== Less is More ===
At time of been asked for editing the image, the original colour space may be exchanged depending on options in Oyranos. This late conversion shall enshure no unnecessary conversion is done. Marti Maria the author of the littleCMS color engine likes to point out that colour transforms are a lossy action, which can, while happen often, decrease the quality. This is especially to been expected for 8-bit per colour channel representations.

=== Editing Colour Space Concept ===
What is needed is to circumvent the native device colour spaces. They are often bumby and have strange gray behaviour. Thats what the device profiles are for, to eleminate such unevenness in a devices colour space.

For editing the gray level should stay equal if changing for instance in Rgb all tree channels at the same factor. Therefore in Oyranos exist beside the Assumed Profiles the Editing Profiles.

All behaves in SB v2.0 the same as before. But when the user wants to adjust some curves in the new SB he will probably do it on in the Editing colour space. The Editing colour space is as well known as workspace.

The appropriate profile is queried with:
 char *profile_name = oyGetDefaultProfileName ( oyEDITING_RGB , myAllocateFunc );
for editing in Rgb.

=== Convert on Mismatch Behaviour ===

SB should now compare the image colour space, as described in the previous SB version, with the Editing colour space. If they are equal all is ok and editing can begin. If not the oyBEHAVIOUR_ACTION_OPEN_MISMATCH_RGB behaviour should be asked what to do.

[[Image:Oyranos-config-flu-0.1.5 behaviour-mismatching on-rgb-mismatch-opt.png]]

Obtaining 0 means no conversion shall occure and the image profile remains unchanged.

1 means the conversion to the Editing Rgb Colour Space shall be done automatically without asking further.

2 means popup a dialog for presenting alternative colour spaces for converting to. The oyEDITING_RGB can be preselected.

For the choices 1 and 2 SB needs to convert to the coresponding colour spaces. For the dialog SB can eighter integrate the usual rendering options (oyBEHAVIOUR_RENDERING_INTENT, oyBEHAVIOUR_RENDERING_BPC) with the Oyranos defaults preselected or just use them without further question.

The image is now ready for editing.

Afterward the edited image can be shown on screen and printed as in the pure viewer version of SB.


== Oyranos Configuration Logic ==
The <b> oyranos-config-fltk</b> configuration dialog shows clearly, what options should be considered in a workflow.

{| style="text-align:left"
|+ style="background:#efefef;text-align:left" | Tab I : policy selection
|-
| [[Image:Oyranos-config-flu-0.1.5 policy.png]]
| valign="top" | Here the user configures Oyranos the most simple way. He needs to identify her-/himself and choose the appropriate policy setting. Many options in Oyranos are affected by the policy setting. The active policy can been seen on the bottom of the dialog.
|-
|}


{| class="wikitable" style="text-align:left"
|+ style="background:#efefef;text-align:left" | Tab II : paths selection
|-
| [[Image:Oyranos-config-flu-0.1.5 paths.png]]
| valign="top" | Paths can be configured and freely choosen as many as one needs. Use the big plus button for. The defaults for the profile home, system and Oyranos configuration paths are allways included. They are none dependent from policies but may influence them.
|-
|}


{| class="wikitable" style="text-align:left"
|+ style="background:#efefef;text-align:left" | Tab III : default profiles selection
|-
| [[Image:Oyranos-config-fltk-0.1.5 default-profiles.png]]
| valign="top" | Default profiles act as finer grained preferences than policies and can be considered advanced options. Individually for each case profiles can be selected, which fit the need of a user. The profiles are searched in the previous paths including the standard paths. Changing options here may invalidate a previous selected policy. Use the right hand botton to show the selected profile detailed in ICC Examin (if installed).
|-
|}


{| class="wikitable" style="text-align:left"
|+ style="background:#efefef;text-align:left" | Tab III : behaviour::rendering settings
|-
| [[Image:Oyranos-config-fltk-0.1.5 behaviour-rendering.png]]
| valign="top" | The behaviour tabs can be considered advanced options. The rendering intent and blackpoint compensation influences the kind of profile build-in gamut mappings. Changing options here may invalidate a previous selected policy.
|-
|}


{| class="wikitable" style="text-align:left"
|+ style="background:#efefef;text-align:left" | Tab III : behaviour::mismatch settings
|-
| [[Image:Oyranos-config-fltk-0.1.5 behaviour-mismatching.png]]
| valign="top" | The behaviour tabs can be considered advanced options. The mismatch options help to setup rules for automatic reacting on user behalf. Here will be decided what to do with a undescribed colour space of a image. Or decide here if to convert during editing to editing colour space if not matching with the images native colour space. For most control the user can here switch to 'promt' to popup a dialog with further options what to do. Changing options here may invalidate a previous selected policy.
|-
|}


{| class="wikitable" style="text-align:left"
|+ style="background:#efefef;text-align:left" | Tab III : behaviour::proofing settings
|-
| [[Image:Oyranos-config-fltk-0.1.5 behaviour-proofing.png]]
| valign="top" | The behaviour tabs can be considered advanced options. The proofing options let the user select a proofer profile and rendering intent. A proofer is used to simulate a other device, for instance a desktop printer on screen or a offset machine on a desktop printer. Here will be decided if proofing is on by default to match the intended device. Changing options here may invalidate a previous selected policy.
|-
|}


{| class="wikitable" style="text-align:left"
|+ style="background:#efefef;text-align:left" | Tab III : behaviour::mixed settings
|-
| [[Image:Oyranos-config-fltk-0.1.5 behaviour-mixed.png]]
| valign="top" | The behaviour tabs can be considered advanced options. These settings influence how to handle mixed colour spaces in one document. Such mixed colour space documents can cause several misbehaviour in later steps of a workflow. Changing options here may invalidate a previous selected policy.
|-
|}

...

[[Oyranos|back -> Oyranos]]
[[Category:Oyranos]]