Oyranos has some requirements to provide colour management related informations through it's APIs.
For further reading see [[Monitor Configuration]].

== Architectural Overview ==

Applications need a way to communicate colorimetry of their image content. Applications, which like to handle colour management (CM) on their own, need additional a path to tell the system what to do with the content and what not.

Applications can follow several strategies:
# be dumb - The application knows nothing about CM. The system takes content as being in a default RGB colour space and does colour matching. Most applications would fall in this category.
# tag content - The application knows about the colorimetry of its content and tells the system about it.
# take over control - The application knows best how to handle its content. Tell the system to not match content with following options:
## Dont apply colour conversions. This is for proofing and image editing applications.
## Dont apply calibration from graphic card gamma tables. This is useful for HDR content.

The "take over control" kind of applications want additionally to know about the screen layout and monitor colorimetry. This is handled by Xinerama alike API's and the [[#ICC_Profiles_in_X|_ICC_PROFILE_xxx]] atom.

=== Screen Areas and Colour Space tagging ===
Two things are needed,
* a ICC profile container attached to window or screen region
* a opt out flags for colour correction down the path, so applications can handle colour management on their own
** a "no colour conversions" flag
** a "no calibration from graphic card gamma tables" flag
* the virtually thierd is that every other content is expected as sRGB, as is the case today

The above would fit along all the path:
  application -> toolkit -> composite manager -> X11 -> OpenGL -> shader.
There remains to find an endpoint where most paths meet. This could be the composite manager or a additional layer between composite manager and Xorg or inside Xorg itself.

The OpenICC project [http://www.freedesktop.org/wiki/OpenIcc/ColorManagementNearX Colour Management Near X] implemented the idea. As a result the net-color spec was born to describe the basic communication. A plugin for [http://www.compiz.org/ compiz] can be installed through the oyranos-xorg-compiz RPM.

==== net-color spec ====

[http://www.oyranos.org/scm?p=xcolor.git;a=blob;f=docs/net-color-spec;h=a8d46ab8d66a1ecf6776b26af0695d5aeefd3292;hb=master Version 0.2 Draft 1] is public. The goal is to communicate ICC colour regions between server and clients. The implementation is available in libXcm-0.2.x. Some tools and a compiz plugin in the Oyranos examples directory support the draft by using libXcm.

== Multi Monitor EDID in X11 ==

EDID information describes monitor parameters like description, serial number and gives hints about colourimetric behaviour. 

Oyranos uses this information to identify a particular monitor and search for a best matching profile, as long as one is stored in the Oyranos device profile database.

You can check independently whether a EDID atom is set by calling in a X11 environment:
 xprop -root | grep EDID

=== Specification ===
X servers export the EDID inormation typically in the "XFree86_DDC_EDID1_RAWDATA" and "XFree86_DDC_EDID2_RAWDATA" atom. If there are more monitors connected to the root window, the following atoms get a underscore and the monitor number appended, like in 

=== Example ===
Xinerama_screen_number = 0 => XFree86_DDC_EDID1_RAWDATA

Xinerama_screen_number >= 1 => XFree86_DDC_EDID1_RAWDATA_1 + XFree86_DDC_EDID1_RAWDATA_2 ...

This way compatibility is enshured for existing applications.

=== Parsing ===
The section decribes the EDID 1 parsing in Oyranos.

Oyranos parses EDID 1 information for monitor identification. It uses the
18 byte blocks starting from 54 for a monitor manufacturer, model and
serial ID string. In case the manufacturer was omitted, it switches back
to scan the 2 byte ID's starting at position 8. The later could be
extended to model(10) and serial(12).

=== References ===
* The issue was initially thrown to [https://bugs.freedesktop.org/show_bug.cgi?id=3910 the fd.o bugtracker].
* [http://www.mail-archive.com/devel@xfree86.org/msg01297.html Re: DDC Atoms & Xinerama]
* [https://bugs.freedesktop.org/show_bug.cgi?id=16639 support request for XRandR in nv and nvidia drivers]

=== Versions / Implementations ===
Oyranos 0.1.5 obtained the oyranos-monitor-nvidia commandline tool to demonstrate the described behaviour.

== ICC Profiles in X ==
=== References ===
* [[#Multi Monitor EDID in X11]]
* [http://www.freedesktop.org/wiki/Specifications/icc_profiles_in_x_spec ICC Profile in X Specification] @ fd.o
* older versions can be found in the [http://www.oyranos.org/wiki/index.php?title=Category:Standards Category:Standards]

=== Further Tasks ===
[[ICC_Profiles_in_X_Specification_0.4|(Draft for a ICC Profiles in X Specification 0.4)]]
* add xrandr-1.2 porperties per each physical output device


== Miscellaneous ==

=== References ===
* [https://bugs.kde.org/show_bug.cgi?id=214011 Graphical corruption in the splash screen when using a depth 30 desktop]


[[Oyranos|back -> Oyranos]]
[[Category:Oyranos]]
[[Category:Standards]]